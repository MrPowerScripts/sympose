.sympose-sidebars .sympose-widget .sym-list {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  -webkit-box-pack: start;
      -ms-flex-pack: start;
          justify-content: flex-start;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
      -ms-flex-direction: row;
          flex-direction: row;
  text-align: center; }
  .sympose-sidebars .sympose-widget .sym-list .sym {
    margin-right: 20px; }

/*
Max width before this PARTICULAR table gets nasty
This query will take effect for any screen smaller than 760px
and also iPads specifically.
*/
@media only screen and (max-width: 760px), (min-device-width: 768px) and (max-device-width: 1024px) {
  table.sympose-schedule {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    /* Force table to not be like tables anymore */
    /* Hide table headers (but not display: none;, for accessibility) */ }
    table.sympose-schedule thead, table.sympose-schedule tbody, table.sympose-schedule th, table.sympose-schedule td, table.sympose-schedule tr {
      display: block; }
    table.sympose-schedule thead tr {
      position: absolute;
      top: -9999px;
      left: -9999px; }
    table.sympose-schedule tr {
      border: 1px solid #ccc;
      display: -webkit-box;
      display: -ms-flexbox;
      display: flex;
      -webkit-box-orient: horizontal;
      -webkit-box-direction: normal;
          -ms-flex-direction: row;
              flex-direction: row;
      -ms-flex-wrap: wrap;
          flex-wrap: wrap; }
    table.sympose-schedule td {
      /* Behave  like a "row" */
      border: none;
      border-bottom: 1px solid #eee;
      position: relative;
      display: -webkit-box;
      display: -ms-flexbox;
      display: flex;
      -webkit-box-align: center;
          -ms-flex-align: center;
              align-items: center; } }
    @media only screen and (max-width: 760px) and (max-width: 480px), only screen and (min-device-width: 768px) and (max-device-width: 1024px) and (max-width: 480px) {
      table.sympose-schedule td {
        text-align: center; }
        table.sympose-schedule td > * {
          width: 100%; } }

@media only screen and (max-width: 760px), (min-device-width: 768px) and (max-device-width: 1024px) {
      table.sympose-schedule td.edit-link {
        display: none; }
      table.sympose-schedule td.time {
        width: 35%; } }
      @media only screen and (max-width: 760px) and (max-width: 480px), only screen and (min-device-width: 768px) and (max-device-width: 1024px) and (max-width: 480px) {
        table.sympose-schedule td.time {
          width: 100%; } }

@media only screen and (max-width: 760px), (min-device-width: 768px) and (max-device-width: 1024px) {
      table.sympose-schedule td.title {
        width: 65%; } }
      @media only screen and (max-width: 760px) and (max-width: 480px), only screen and (min-device-width: 768px) and (max-device-width: 1024px) and (max-width: 480px) {
        table.sympose-schedule td.title {
          width: 100%; } }

@media only screen and (max-width: 760px), (min-device-width: 768px) and (max-device-width: 1024px) {
      table.sympose-schedule td.people, table.sympose-schedule td.organisations {
        width: 30%; } }
      @media only screen and (max-width: 760px) and (max-width: 480px), only screen and (min-device-width: 768px) and (max-device-width: 1024px) and (max-width: 480px) {
        table.sympose-schedule td.people, table.sympose-schedule td.organisations {
          width: 50%; } }

@media only screen and (max-width: 760px), (min-device-width: 768px) and (max-device-width: 1024px) {
      table.sympose-schedule td.sympose-read-more {
        display: -webkit-box;
        display: -ms-flexbox;
        display: flex;
        -webkit-box-align: center;
            -ms-flex-align: center;
                align-items: center;
        -webkit-box-flex: 1;
            -ms-flex: 1;
                flex: 1;
        -webkit-box-pack: end;
            -ms-flex-pack: end;
                justify-content: flex-end;
        margin-left: auto; } }
      @media only screen and (max-width: 760px) and (max-width: 480px), only screen and (min-device-width: 768px) and (max-device-width: 1024px) and (max-width: 480px) {
        table.sympose-schedule td.sympose-read-more {
          width: 100%;
          -webkit-box-pack: center;
              -ms-flex-pack: center;
                  justify-content: center; } }

@media only screen and (max-width: 760px), (min-device-width: 768px) and (max-device-width: 1024px) {
    table.sympose-schedule tr.title-column th {
      width: 100%; } }

table.sympose-schedule {
  width: 100%; }
  table.sympose-schedule tr.session-child td {
    line-height: 1; }
    table.sympose-schedule tr.session-child td a {
      padding-top: 0;
      padding-bottom: 0; }
    table.sympose-schedule tr.session-child td span.sym img {
      width: 75%; }
  table.sympose-schedule tr.running td a {
    color: red; }
  table.sympose-schedule tr th {
    background: rgba(0, 0, 0, 0.05);
    padding: 5px; }
    table.sympose-schedule tr th h3 {
      margin: 0; }
  table.sympose-schedule tr td {
    vertical-align: middle;
    border-bottom: 1px solid #eee; }
    table.sympose-schedule tr td .inner {
      vertical-align: middle; }
    table.sympose-schedule tr td a {
      display: block;
      padding: 5px;
      text-decoration: none; }
    table.sympose-schedule tr td .sym-list {
      overflow: hidden; }
    table.sympose-schedule tr td span.sym {
      display: inline-block; }
    table.sympose-schedule tr td span.sym.organisation img {
      vertical-align: middle; }
  table.sympose-schedule tr td.sympose-read-more a {
    text-decoration: underline; }
  table.sympose-schedule tr:hover td {
    background: rgba(0, 0, 0, 0.075);
    color: white; }

.sym-list {
  width: 100%;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex; }
  .sym-list .list-inner {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -ms-flex-pack: distribute;
        justify-content: space-around;
    -ms-flex-wrap: wrap;
        flex-wrap: wrap; }
    .sym-list .list-inner span.sym {
      vertical-align: top; }
      .sym-list .list-inner span.sym a {
        text-decoration: none; }
  .sym-list .sym.person.no-image .image {
    display: none; }
  .sym-list .sym.session.no-image .image {
    display: none; }
  .sym-list .sym.organisation.no-image .image {
    display: none; }

.sym-list.organisation .list-inner {
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center; }
  .sym-list.organisation .list-inner span.sym {
    max-width: 150px;
    margin: 20px; }

.sym-list.person .list-inner span.sym {
  max-width: 150px;
  margin-right: 15px; }

span.sym {
  display: inline-block;
  text-align: center; }
  span.sym a {
    display: block;
    text-decoration: none; }
    span.sym a .image {
      margin-bottom: 5px;
      min-height: 100px;
      width: 100%;
      background-size: cover;
      background-position: center;
      background-repeat: no-repeat; }
    span.sym a span {
      display: block; }
    span.sym a span.desc {
      display: inline-block; }
  span.sym .inner-content {
    padding: 10px; }
  span.sym img {
    margin: 0 auto;
    display: inline-block; }

span.sym.organisation .image {
  background-size: contain; }

span.sym.person a .image {
  background-size: cover;
  min-height: 200px; }

.sympose-session-items {
  margin-bottom: 40px; }

.widget .sym-list {
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column; }
  .widget .sym-list span.sym {
    margin-bottom: 20px; }

.sym-list.shortcode span.sym {
  margin-bottom: 20px; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9fZXh0ZW5zaW9ucy5zY3NzIiwibGliL19zY2hlZHVsZS5zY3NzIiwic3ltcG9zZS5jc3MiLCJzeW1wb3NlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFHTSxvQkFBYTtFQUFiLG9CQUFhO0VBQWIsYUFBYTtFQUNiLG1CQUFlO01BQWYsZUFBZTtFQUNmLHVCQUEyQjtNQUEzQixvQkFBMkI7VUFBM0IsMkJBQTJCO0VBQzNCLDhCQUFtQjtFQUFuQiw2QkFBbUI7TUFBbkIsdUJBQW1CO1VBQW5CLG1CQUFtQjtFQUNuQixrQkFBa0IsRUFBQTtFQVB4QjtJQVNRLGtCQUFrQixFQUFBOztBQ1QxQjs7OztDQ2FDO0FEUkQ7RUFFRTtJQUNFLG9CQUFhO0lBQWIsb0JBQWE7SUFBYixhQUFhO0lBR2IsOENBQUE7SUFLQSxtRUFBQSxFQUFvRTtJQVR0RTtNQU1JLGNBQWMsRUFBQTtJQU5sQjtNQVdJLGtCQUFrQjtNQUNsQixZQUFZO01BQ1osYUFBYSxFQUFBO0lBYmpCO01BaUJJLHNCQUFzQjtNQUN0QixvQkFBYTtNQUFiLG9CQUFhO01BQWIsYUFBYTtNQUNiLDhCQUFtQjtNQUFuQiw2QkFBbUI7VUFBbkIsdUJBQW1CO2NBQW5CLG1CQUFtQjtNQUNuQixtQkFBZTtVQUFmLGVBQWUsRUFBQTtJQXBCbkI7TUF5QkkseUJBQUE7TUFDQSxZQUFZO01BQ1osNkJBQTZCO01BQzdCLGtCQUFrQjtNQUNsQixvQkFBYTtNQUFiLG9CQUFhO01BQWIsYUFBYTtNQUNiLHlCQUFtQjtVQUFuQixzQkFBbUI7Y0FBbkIsbUJBQW1CLEVBQUEsRUFnRHBCO0lBOUNDO01BaENKO1FBaUNNLGtCQUFrQixFQUFBO1FBakN4QjtVQW1DUSxXQUFXLEVBQUEsRUFDWjs7QUF0Q1Q7TUFFRTtRQXlDTSxhQUFhLEVBQUE7TUF6Q25CO1FBNkNNLFVBQVUsRUFBQSxFQUlYO01BSEM7UUE5Q047VUErQ1EsV0FBVyxFQUFBLEVBRWQ7O0FBbkRQO01BRUU7UUFvRE0sVUFBVSxFQUFBLEVBSVg7TUFIQztRQXJETjtVQXNEUSxXQUFXLEVBQUEsRUFFZDs7QUExRFA7TUFFRTtRQTRETSxVQUFVLEVBQUEsRUFJWDtNQUhDO1FBN0ROO1VBOERRLFVBQVUsRUFBQSxFQUViOztBQWxFUDtNQUVFO1FBbUVNLG9CQUFhO1FBQWIsb0JBQWE7UUFBYixhQUFhO1FBQ2IseUJBQW1CO1lBQW5CLHNCQUFtQjtnQkFBbkIsbUJBQW1CO1FBQ25CLG1CQUFPO1lBQVAsV0FBTztnQkFBUCxPQUFPO1FBQ1AscUJBQXlCO1lBQXpCLGtCQUF5QjtnQkFBekIseUJBQXlCO1FBQ3pCLGlCQUFpQixFQUFBLEVBS2xCO01BSkM7UUF4RU47VUF5RVEsV0FBVztVQUNYLHdCQUF1QjtjQUF2QixxQkFBdUI7a0JBQXZCLHVCQUF1QixFQUFBLEVBRTFCOztBQTlFUDtJQUVFO01BaUZJLFdBQVcsRUFBQSxFQUNaOztBRXJGTDtFQUNFLFdBQVcsRUFBQTtFQURiO0lBS1EsY0FBYyxFQUFBO0lBTHRCO01BT1UsY0FBYztNQUNkLGlCQUFpQixFQUFBO0lBUjNCO01BV1UsVUFBVSxFQUFBO0VBWHBCO0lBa0JVLFVBQVUsRUFBQTtFQWxCcEI7SUF1Qk0sK0JBQTRCO0lBQzVCLFlBQVksRUFBQTtJQXhCbEI7TUEwQlEsU0FBUyxFQUFBO0VBMUJqQjtJQThCTSxzQkFBc0I7SUFDdEIsNkJBQTZCLEVBQUE7SUEvQm5DO01BaUNRLHNCQUFzQixFQUFBO0lBakM5QjtNQW9DUSxjQUFjO01BQ2QsWUFBWTtNQUNaLHFCQUFxQixFQUFBO0lBdEM3QjtNQXlDUSxnQkFBZ0IsRUFBQTtJQXpDeEI7TUE0Q1EscUJBQXFCLEVBQUE7SUE1QzdCO01BZ0RVLHNCQUFzQixFQUFBO0VBaERoQztJQXNEUSwwQkFBMEIsRUFBQTtFQXREbEM7SUEyRFEsZ0NBQTZCO0lBQzdCLFlBQVksRUFBQTs7QUFLcEI7RUFDRSxXQUFXO0VBQ1gsb0JBQWE7RUFBYixvQkFBYTtFQUFiLGFBQWEsRUFBQTtFQUZmO0lBSUksb0JBQWE7SUFBYixvQkFBYTtJQUFiLGFBQWE7SUFDYix5QkFBNkI7UUFBN0IsNkJBQTZCO0lBQzdCLG1CQUFlO1FBQWYsZUFBZSxFQUFBO0lBTm5CO01BUU0sbUJBQW1CLEVBQUE7TUFSekI7UUFVUSxxQkFBcUIsRUFBQTtFQVY3QjtJQWdCTSxhQUFhLEVBQUE7RUFoQm5CO0lBcUJNLGFBQWEsRUFBQTtFQXJCbkI7SUEwQk0sYUFBYSxFQUFBOztBQUluQjtFQUVJLHlCQUFtQjtNQUFuQixzQkFBbUI7VUFBbkIsbUJBQW1CLEVBQUE7RUFGdkI7SUFJTSxnQkFBZ0I7SUFDaEIsWUFBWSxFQUFBOztBQUlsQjtFQUdNLGdCQUFnQjtFQUNoQixrQkFBa0IsRUFBQTs7QUFJeEI7RUFDRSxxQkFBcUI7RUFDckIsa0JBQWtCLEVBQUE7RUFGcEI7SUFJSSxjQUFjO0lBQ2QscUJBQXFCLEVBQUE7SUFMekI7TUFPTSxrQkFBa0I7TUFDbEIsaUJBQWlCO01BQ2pCLFdBQVc7TUFDWCxzQkFBc0I7TUFDdEIsMkJBQTJCO01BQzNCLDRCQUE0QixFQUFBO0lBWmxDO01BZU0sY0FBYyxFQUFBO0lBZnBCO01Ba0JNLHFCQUFxQixFQUFBO0VBbEIzQjtJQXNCSSxhQUFhLEVBQUE7RUF0QmpCO0lBeUJJLGNBQWM7SUFDZCxxQkFBcUIsRUFBQTs7QUFHekI7RUFFSSx3QkFBd0IsRUFBQTs7QUFHNUI7RUFHTSxzQkFBc0I7RUFDdEIsaUJBQWlCLEVBQUE7O0FBSXZCO0VBQ0UsbUJBQW1CLEVBQUE7O0FBR3JCO0VBQ0UsNEJBQXNCO0VBQXRCLDZCQUFzQjtNQUF0QiwwQkFBc0I7VUFBdEIsc0JBQXNCLEVBQUE7RUFEeEI7SUFHSSxtQkFBbUIsRUFBQTs7QUFJdkI7RUFFSSxtQkFBbUIsRUFBQSIsImZpbGUiOiJzeW1wb3NlLmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5zeW1wb3NlLXNpZGViYXJzIHtcbiAgLnN5bXBvc2Utd2lkZ2V0IHtcbiAgICAuc3ltLWxpc3Qge1xuICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgIGZsZXgtd3JhcDogd3JhcDtcbiAgICAgIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcbiAgICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICAuc3ltIHtcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiAyMHB4O1xuICAgICAgfVxuICAgIH1cbiAgfVxufVxuIiwiLypcbk1heCB3aWR0aCBiZWZvcmUgdGhpcyBQQVJUSUNVTEFSIHRhYmxlIGdldHMgbmFzdHlcblRoaXMgcXVlcnkgd2lsbCB0YWtlIGVmZmVjdCBmb3IgYW55IHNjcmVlbiBzbWFsbGVyIHRoYW4gNzYwcHhcbmFuZCBhbHNvIGlQYWRzIHNwZWNpZmljYWxseS5cbiovXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2MHB4KSwgKG1pbi1kZXZpY2Utd2lkdGg6IDc2OHB4KSBhbmQgKG1heC1kZXZpY2Utd2lkdGg6IDEwMjRweCkgIHtcblxuICB0YWJsZS5zeW1wb3NlLXNjaGVkdWxlIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuXG5cbiAgICAvKiBGb3JjZSB0YWJsZSB0byBub3QgYmUgbGlrZSB0YWJsZXMgYW55bW9yZSAqL1xuICAgIHRoZWFkLCB0Ym9keSwgdGgsIHRkLCB0ciB7XG4gICAgICBkaXNwbGF5OiBibG9jaztcbiAgICB9XG5cbiAgICAvKiBIaWRlIHRhYmxlIGhlYWRlcnMgKGJ1dCBub3QgZGlzcGxheTogbm9uZTssIGZvciBhY2Nlc3NpYmlsaXR5KSAqL1xuICAgIHRoZWFkIHRyIHtcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIHRvcDogLTk5OTlweDtcbiAgICAgIGxlZnQ6IC05OTk5cHg7XG4gICAgfVxuXG4gICAgdHIge1xuICAgICAgYm9yZGVyOiAxcHggc29saWQgI2NjYztcbiAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICAgICAgZmxleC13cmFwOiB3cmFwO1xuXG4gICAgfVxuXG4gICAgdGQge1xuICAgICAgLyogQmVoYXZlICBsaWtlIGEgXCJyb3dcIiAqL1xuICAgICAgYm9yZGVyOiBub25lO1xuICAgICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNlZWU7XG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcblxuICAgICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA0ODBweCkge1xuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICAgID4gKiB7XG4gICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgIH1cbiAgICAgIH1cblxuXG4gICAgICAmLmVkaXQtbGluayB7XG4gICAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgICB9XG5cbiAgICAgICYudGltZSB7XG4gICAgICAgIHdpZHRoOiAzNSU7XG4gICAgICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDgwcHgpIHtcbiAgICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICAmLnRpdGxlIHtcbiAgICAgICAgd2lkdGg6IDY1JTtcbiAgICAgICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA0ODBweCkge1xuICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgICYucGVvcGxlLFxuICAgICAgJi5vcmdhbmlzYXRpb25zIHtcbiAgICAgICAgd2lkdGg6IDMwJTtcbiAgICAgICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA0ODBweCkge1xuICAgICAgICAgIHdpZHRoOiA1MCU7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgJi5zeW1wb3NlLXJlYWQtbW9yZSB7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICAgIGZsZXg6IDE7XG4gICAgICAgIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XG4gICAgICAgIG1hcmdpbi1sZWZ0OiBhdXRvO1xuICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDQ4MHB4KSB7XG4gICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgIH1cblxuICAgIHRyLnRpdGxlLWNvbHVtbiB0aCB7XG4gICAgICB3aWR0aDogMTAwJTtcbiAgICB9XG4gIH1cbn1cbiIsIi5zeW1wb3NlLXNpZGViYXJzIC5zeW1wb3NlLXdpZGdldCAuc3ltLWxpc3Qge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LXdyYXA6IHdyYXA7XG4gIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcbiAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgdGV4dC1hbGlnbjogY2VudGVyOyB9XG4gIC5zeW1wb3NlLXNpZGViYXJzIC5zeW1wb3NlLXdpZGdldCAuc3ltLWxpc3QgLnN5bSB7XG4gICAgbWFyZ2luLXJpZ2h0OiAyMHB4OyB9XG5cbi8qXG5NYXggd2lkdGggYmVmb3JlIHRoaXMgUEFSVElDVUxBUiB0YWJsZSBnZXRzIG5hc3R5XG5UaGlzIHF1ZXJ5IHdpbGwgdGFrZSBlZmZlY3QgZm9yIGFueSBzY3JlZW4gc21hbGxlciB0aGFuIDc2MHB4XG5hbmQgYWxzbyBpUGFkcyBzcGVjaWZpY2FsbHkuXG4qL1xuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjBweCksIChtaW4tZGV2aWNlLXdpZHRoOiA3NjhweCkgYW5kIChtYXgtZGV2aWNlLXdpZHRoOiAxMDI0cHgpIHtcbiAgdGFibGUuc3ltcG9zZS1zY2hlZHVsZSB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICAvKiBGb3JjZSB0YWJsZSB0byBub3QgYmUgbGlrZSB0YWJsZXMgYW55bW9yZSAqL1xuICAgIC8qIEhpZGUgdGFibGUgaGVhZGVycyAoYnV0IG5vdCBkaXNwbGF5OiBub25lOywgZm9yIGFjY2Vzc2liaWxpdHkpICovIH1cbiAgICB0YWJsZS5zeW1wb3NlLXNjaGVkdWxlIHRoZWFkLCB0YWJsZS5zeW1wb3NlLXNjaGVkdWxlIHRib2R5LCB0YWJsZS5zeW1wb3NlLXNjaGVkdWxlIHRoLCB0YWJsZS5zeW1wb3NlLXNjaGVkdWxlIHRkLCB0YWJsZS5zeW1wb3NlLXNjaGVkdWxlIHRyIHtcbiAgICAgIGRpc3BsYXk6IGJsb2NrOyB9XG4gICAgdGFibGUuc3ltcG9zZS1zY2hlZHVsZSB0aGVhZCB0ciB7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICB0b3A6IC05OTk5cHg7XG4gICAgICBsZWZ0OiAtOTk5OXB4OyB9XG4gICAgdGFibGUuc3ltcG9zZS1zY2hlZHVsZSB0ciB7XG4gICAgICBib3JkZXI6IDFweCBzb2xpZCAjY2NjO1xuICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gICAgICBmbGV4LXdyYXA6IHdyYXA7IH1cbiAgICB0YWJsZS5zeW1wb3NlLXNjaGVkdWxlIHRkIHtcbiAgICAgIC8qIEJlaGF2ZSAgbGlrZSBhIFwicm93XCIgKi9cbiAgICAgIGJvcmRlcjogbm9uZTtcbiAgICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZWVlO1xuICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7IH0gfVxuICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzYwcHgpIGFuZCAobWF4LXdpZHRoOiA0ODBweCksIG9ubHkgc2NyZWVuIGFuZCAobWluLWRldmljZS13aWR0aDogNzY4cHgpIGFuZCAobWF4LWRldmljZS13aWR0aDogMTAyNHB4KSBhbmQgKG1heC13aWR0aDogNDgwcHgpIHtcbiAgICAgIHRhYmxlLnN5bXBvc2Utc2NoZWR1bGUgdGQge1xuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7IH1cbiAgICAgICAgdGFibGUuc3ltcG9zZS1zY2hlZHVsZSB0ZCA+ICoge1xuICAgICAgICAgIHdpZHRoOiAxMDAlOyB9IH1cblxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjBweCksIChtaW4tZGV2aWNlLXdpZHRoOiA3NjhweCkgYW5kIChtYXgtZGV2aWNlLXdpZHRoOiAxMDI0cHgpIHtcbiAgICAgIHRhYmxlLnN5bXBvc2Utc2NoZWR1bGUgdGQuZWRpdC1saW5rIHtcbiAgICAgICAgZGlzcGxheTogbm9uZTsgfVxuICAgICAgdGFibGUuc3ltcG9zZS1zY2hlZHVsZSB0ZC50aW1lIHtcbiAgICAgICAgd2lkdGg6IDM1JTsgfSB9XG4gICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2MHB4KSBhbmQgKG1heC13aWR0aDogNDgwcHgpLCBvbmx5IHNjcmVlbiBhbmQgKG1pbi1kZXZpY2Utd2lkdGg6IDc2OHB4KSBhbmQgKG1heC1kZXZpY2Utd2lkdGg6IDEwMjRweCkgYW5kIChtYXgtd2lkdGg6IDQ4MHB4KSB7XG4gICAgICAgIHRhYmxlLnN5bXBvc2Utc2NoZWR1bGUgdGQudGltZSB7XG4gICAgICAgICAgd2lkdGg6IDEwMCU7IH0gfVxuXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2MHB4KSwgKG1pbi1kZXZpY2Utd2lkdGg6IDc2OHB4KSBhbmQgKG1heC1kZXZpY2Utd2lkdGg6IDEwMjRweCkge1xuICAgICAgdGFibGUuc3ltcG9zZS1zY2hlZHVsZSB0ZC50aXRsZSB7XG4gICAgICAgIHdpZHRoOiA2NSU7IH0gfVxuICAgICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjBweCkgYW5kIChtYXgtd2lkdGg6IDQ4MHB4KSwgb25seSBzY3JlZW4gYW5kIChtaW4tZGV2aWNlLXdpZHRoOiA3NjhweCkgYW5kIChtYXgtZGV2aWNlLXdpZHRoOiAxMDI0cHgpIGFuZCAobWF4LXdpZHRoOiA0ODBweCkge1xuICAgICAgICB0YWJsZS5zeW1wb3NlLXNjaGVkdWxlIHRkLnRpdGxlIHtcbiAgICAgICAgICB3aWR0aDogMTAwJTsgfSB9XG5cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzYwcHgpLCAobWluLWRldmljZS13aWR0aDogNzY4cHgpIGFuZCAobWF4LWRldmljZS13aWR0aDogMTAyNHB4KSB7XG4gICAgICB0YWJsZS5zeW1wb3NlLXNjaGVkdWxlIHRkLnBlb3BsZSwgdGFibGUuc3ltcG9zZS1zY2hlZHVsZSB0ZC5vcmdhbmlzYXRpb25zIHtcbiAgICAgICAgd2lkdGg6IDMwJTsgfSB9XG4gICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2MHB4KSBhbmQgKG1heC13aWR0aDogNDgwcHgpLCBvbmx5IHNjcmVlbiBhbmQgKG1pbi1kZXZpY2Utd2lkdGg6IDc2OHB4KSBhbmQgKG1heC1kZXZpY2Utd2lkdGg6IDEwMjRweCkgYW5kIChtYXgtd2lkdGg6IDQ4MHB4KSB7XG4gICAgICAgIHRhYmxlLnN5bXBvc2Utc2NoZWR1bGUgdGQucGVvcGxlLCB0YWJsZS5zeW1wb3NlLXNjaGVkdWxlIHRkLm9yZ2FuaXNhdGlvbnMge1xuICAgICAgICAgIHdpZHRoOiA1MCU7IH0gfVxuXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2MHB4KSwgKG1pbi1kZXZpY2Utd2lkdGg6IDc2OHB4KSBhbmQgKG1heC1kZXZpY2Utd2lkdGg6IDEwMjRweCkge1xuICAgICAgdGFibGUuc3ltcG9zZS1zY2hlZHVsZSB0ZC5zeW1wb3NlLXJlYWQtbW9yZSB7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICAgIGZsZXg6IDE7XG4gICAgICAgIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XG4gICAgICAgIG1hcmdpbi1sZWZ0OiBhdXRvOyB9IH1cbiAgICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzYwcHgpIGFuZCAobWF4LXdpZHRoOiA0ODBweCksIG9ubHkgc2NyZWVuIGFuZCAobWluLWRldmljZS13aWR0aDogNzY4cHgpIGFuZCAobWF4LWRldmljZS13aWR0aDogMTAyNHB4KSBhbmQgKG1heC13aWR0aDogNDgwcHgpIHtcbiAgICAgICAgdGFibGUuc3ltcG9zZS1zY2hlZHVsZSB0ZC5zeW1wb3NlLXJlYWQtbW9yZSB7XG4gICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7IH0gfVxuXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2MHB4KSwgKG1pbi1kZXZpY2Utd2lkdGg6IDc2OHB4KSBhbmQgKG1heC1kZXZpY2Utd2lkdGg6IDEwMjRweCkge1xuICAgIHRhYmxlLnN5bXBvc2Utc2NoZWR1bGUgdHIudGl0bGUtY29sdW1uIHRoIHtcbiAgICAgIHdpZHRoOiAxMDAlOyB9IH1cblxudGFibGUuc3ltcG9zZS1zY2hlZHVsZSB7XG4gIHdpZHRoOiAxMDAlOyB9XG4gIHRhYmxlLnN5bXBvc2Utc2NoZWR1bGUgdHIuc2Vzc2lvbi1jaGlsZCB0ZCB7XG4gICAgbGluZS1oZWlnaHQ6IDE7IH1cbiAgICB0YWJsZS5zeW1wb3NlLXNjaGVkdWxlIHRyLnNlc3Npb24tY2hpbGQgdGQgYSB7XG4gICAgICBwYWRkaW5nLXRvcDogMDtcbiAgICAgIHBhZGRpbmctYm90dG9tOiAwOyB9XG4gICAgdGFibGUuc3ltcG9zZS1zY2hlZHVsZSB0ci5zZXNzaW9uLWNoaWxkIHRkIHNwYW4uc3ltIGltZyB7XG4gICAgICB3aWR0aDogNzUlOyB9XG4gIHRhYmxlLnN5bXBvc2Utc2NoZWR1bGUgdHIucnVubmluZyB0ZCBhIHtcbiAgICBjb2xvcjogcmVkOyB9XG4gIHRhYmxlLnN5bXBvc2Utc2NoZWR1bGUgdHIgdGgge1xuICAgIGJhY2tncm91bmQ6IHJnYmEoMCwgMCwgMCwgMC4wNSk7XG4gICAgcGFkZGluZzogNXB4OyB9XG4gICAgdGFibGUuc3ltcG9zZS1zY2hlZHVsZSB0ciB0aCBoMyB7XG4gICAgICBtYXJnaW46IDA7IH1cbiAgdGFibGUuc3ltcG9zZS1zY2hlZHVsZSB0ciB0ZCB7XG4gICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbiAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2VlZTsgfVxuICAgIHRhYmxlLnN5bXBvc2Utc2NoZWR1bGUgdHIgdGQgLmlubmVyIHtcbiAgICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7IH1cbiAgICB0YWJsZS5zeW1wb3NlLXNjaGVkdWxlIHRyIHRkIGEge1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICBwYWRkaW5nOiA1cHg7XG4gICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7IH1cbiAgICB0YWJsZS5zeW1wb3NlLXNjaGVkdWxlIHRyIHRkIC5zeW0tbGlzdCB7XG4gICAgICBvdmVyZmxvdzogaGlkZGVuOyB9XG4gICAgdGFibGUuc3ltcG9zZS1zY2hlZHVsZSB0ciB0ZCBzcGFuLnN5bSB7XG4gICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IH1cbiAgICB0YWJsZS5zeW1wb3NlLXNjaGVkdWxlIHRyIHRkIHNwYW4uc3ltLm9yZ2FuaXNhdGlvbiBpbWcge1xuICAgICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTsgfVxuICB0YWJsZS5zeW1wb3NlLXNjaGVkdWxlIHRyIHRkLnN5bXBvc2UtcmVhZC1tb3JlIGEge1xuICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lOyB9XG4gIHRhYmxlLnN5bXBvc2Utc2NoZWR1bGUgdHI6aG92ZXIgdGQge1xuICAgIGJhY2tncm91bmQ6IHJnYmEoMCwgMCwgMCwgMC4wNzUpO1xuICAgIGNvbG9yOiB3aGl0ZTsgfVxuXG4uc3ltLWxpc3Qge1xuICB3aWR0aDogMTAwJTtcbiAgZGlzcGxheTogZmxleDsgfVxuICAuc3ltLWxpc3QgLmxpc3QtaW5uZXIge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQ7XG4gICAgZmxleC13cmFwOiB3cmFwOyB9XG4gICAgLnN5bS1saXN0IC5saXN0LWlubmVyIHNwYW4uc3ltIHtcbiAgICAgIHZlcnRpY2FsLWFsaWduOiB0b3A7IH1cbiAgICAgIC5zeW0tbGlzdCAubGlzdC1pbm5lciBzcGFuLnN5bSBhIHtcbiAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lOyB9XG4gIC5zeW0tbGlzdCAuc3ltLnBlcnNvbi5uby1pbWFnZSAuaW1hZ2Uge1xuICAgIGRpc3BsYXk6IG5vbmU7IH1cbiAgLnN5bS1saXN0IC5zeW0uc2Vzc2lvbi5uby1pbWFnZSAuaW1hZ2Uge1xuICAgIGRpc3BsYXk6IG5vbmU7IH1cbiAgLnN5bS1saXN0IC5zeW0ub3JnYW5pc2F0aW9uLm5vLWltYWdlIC5pbWFnZSB7XG4gICAgZGlzcGxheTogbm9uZTsgfVxuXG4uc3ltLWxpc3Qub3JnYW5pc2F0aW9uIC5saXN0LWlubmVyIHtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjsgfVxuICAuc3ltLWxpc3Qub3JnYW5pc2F0aW9uIC5saXN0LWlubmVyIHNwYW4uc3ltIHtcbiAgICBtYXgtd2lkdGg6IDE1MHB4O1xuICAgIG1hcmdpbjogMjBweDsgfVxuXG4uc3ltLWxpc3QucGVyc29uIC5saXN0LWlubmVyIHNwYW4uc3ltIHtcbiAgbWF4LXdpZHRoOiAxNTBweDtcbiAgbWFyZ2luLXJpZ2h0OiAxNXB4OyB9XG5cbnNwYW4uc3ltIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7IH1cbiAgc3Bhbi5zeW0gYSB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lOyB9XG4gICAgc3Bhbi5zeW0gYSAuaW1hZ2Uge1xuICAgICAgbWFyZ2luLWJvdHRvbTogNXB4O1xuICAgICAgbWluLWhlaWdodDogMTAwcHg7XG4gICAgICB3aWR0aDogMTAwJTtcbiAgICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gICAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXI7XG4gICAgICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0OyB9XG4gICAgc3Bhbi5zeW0gYSBzcGFuIHtcbiAgICAgIGRpc3BsYXk6IGJsb2NrOyB9XG4gICAgc3Bhbi5zeW0gYSBzcGFuLmRlc2Mge1xuICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrOyB9XG4gIHNwYW4uc3ltIC5pbm5lci1jb250ZW50IHtcbiAgICBwYWRkaW5nOiAxMHB4OyB9XG4gIHNwYW4uc3ltIGltZyB7XG4gICAgbWFyZ2luOiAwIGF1dG87XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrOyB9XG5cbnNwYW4uc3ltLm9yZ2FuaXNhdGlvbiAuaW1hZ2Uge1xuICBiYWNrZ3JvdW5kLXNpemU6IGNvbnRhaW47IH1cblxuc3Bhbi5zeW0ucGVyc29uIGEgLmltYWdlIHtcbiAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgbWluLWhlaWdodDogMjAwcHg7IH1cblxuLnN5bXBvc2Utc2Vzc2lvbi1pdGVtcyB7XG4gIG1hcmdpbi1ib3R0b206IDQwcHg7IH1cblxuLndpZGdldCAuc3ltLWxpc3Qge1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uOyB9XG4gIC53aWRnZXQgLnN5bS1saXN0IHNwYW4uc3ltIHtcbiAgICBtYXJnaW4tYm90dG9tOiAyMHB4OyB9XG5cbi5zeW0tbGlzdC5zaG9ydGNvZGUgc3Bhbi5zeW0ge1xuICBtYXJnaW4tYm90dG9tOiAyMHB4OyB9XG4iLCJAaW1wb3J0ICcuLi9iYXNlL2NvbG9ycyc7XG5AaW1wb3J0ICdsaWIvZXh0ZW5zaW9ucyc7XG5AaW1wb3J0ICdsaWIvc2NoZWR1bGUnO1xuXG50YWJsZS5zeW1wb3NlLXNjaGVkdWxlIHtcbiAgd2lkdGg6IDEwMCU7XG4gIHRyIHtcbiAgICAmLnNlc3Npb24tY2hpbGQge1xuICAgICAgdGQge1xuICAgICAgICBsaW5lLWhlaWdodDogMTtcbiAgICAgICAgYSB7XG4gICAgICAgICAgcGFkZGluZy10b3A6IDA7XG4gICAgICAgICAgcGFkZGluZy1ib3R0b206IDA7XG4gICAgICAgIH1cbiAgICAgICAgc3Bhbi5zeW0gaW1nIHtcbiAgICAgICAgICB3aWR0aDogNzUlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgICYucnVubmluZyB7XG4gICAgICB0ZCB7XG4gICAgICAgIGEge1xuICAgICAgICAgIGNvbG9yOiByZWQ7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgdGgge1xuICAgICAgYmFja2dyb3VuZDogcmdiYSgwLDAsMCwwLjA1KTtcbiAgICAgIHBhZGRpbmc6IDVweDtcbiAgICAgIGgzIHtcbiAgICAgICAgbWFyZ2luOiAwO1xuICAgICAgfVxuICAgIH1cbiAgICB0ZCB7XG4gICAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xuICAgICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNlZWU7XG4gICAgICAuaW5uZXIge1xuICAgICAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xuICAgICAgfVxuICAgICAgYSB7XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICBwYWRkaW5nOiA1cHg7XG4gICAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICAgIH1cbiAgICAgIC5zeW0tbGlzdCB7XG4gICAgICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgICB9XG4gICAgICBzcGFuLnN5bSB7XG4gICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgIH1cbiAgICAgIHNwYW4uc3ltLm9yZ2FuaXNhdGlvbiB7XG4gICAgICAgIGltZyB7XG4gICAgICAgICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgICB0ZC5zeW1wb3NlLXJlYWQtbW9yZSB7XG4gICAgICBhIHtcbiAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XG4gICAgICB9XG4gICAgfVxuICAgICY6aG92ZXIge1xuICAgICAgdGQge1xuICAgICAgICBiYWNrZ3JvdW5kOiByZ2JhKDAsMCwwLDAuMDc1KTtcbiAgICAgICAgY29sb3I6IHdoaXRlO1xuICAgICAgfVxuICAgIH1cbiAgfVxufVxuLnN5bS1saXN0IHtcbiAgd2lkdGg6IDEwMCU7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIC5saXN0LWlubmVyIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xuICAgIGZsZXgtd3JhcDogd3JhcDtcbiAgICBzcGFuLnN5bSB7XG4gICAgICB2ZXJ0aWNhbC1hbGlnbjogdG9wO1xuICAgICAgYSB7XG4gICAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbiAgLnN5bS5wZXJzb24ubm8taW1hZ2Uge1xuICAgIC5pbWFnZSB7XG4gICAgICBkaXNwbGF5OiBub25lO1xuICAgIH1cbiAgfVxuICAuc3ltLnNlc3Npb24ubm8taW1hZ2Uge1xuICAgIC5pbWFnZSB7XG4gICAgICBkaXNwbGF5OiBub25lO1xuICAgIH1cbiAgfVxuICAuc3ltLm9yZ2FuaXNhdGlvbi5uby1pbWFnZSB7XG4gICAgLmltYWdlIHtcbiAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgfVxuICB9XG59XG4uc3ltLWxpc3Qub3JnYW5pc2F0aW9uIHtcbiAgLmxpc3QtaW5uZXIge1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgc3Bhbi5zeW0ge1xuICAgICAgbWF4LXdpZHRoOiAxNTBweDtcbiAgICAgIG1hcmdpbjogMjBweDtcbiAgICB9XG4gIH1cbn1cbi5zeW0tbGlzdC5wZXJzb24ge1xuICAubGlzdC1pbm5lciB7XG4gICAgc3Bhbi5zeW0ge1xuICAgICAgbWF4LXdpZHRoOiAxNTBweDtcbiAgICAgIG1hcmdpbi1yaWdodDogMTVweDtcbiAgICB9XG4gIH1cbn1cbnNwYW4uc3ltIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGEge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICAuaW1hZ2Uge1xuICAgICAgbWFyZ2luLWJvdHRvbTogNXB4O1xuICAgICAgbWluLWhlaWdodDogMTAwcHg7XG4gICAgICB3aWR0aDogMTAwJTtcbiAgICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gICAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXI7XG4gICAgICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICAgIH1cbiAgICBzcGFuIHtcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIH1cbiAgICBzcGFuLmRlc2Mge1xuICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIH1cbiAgfVxuICAuaW5uZXItY29udGVudCB7XG4gICAgcGFkZGluZzogMTBweDtcbiAgfVxuICBpbWcge1xuICAgIG1hcmdpbjogMCBhdXRvO1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgfVxufVxuc3Bhbi5zeW0ub3JnYW5pc2F0aW9uIHtcbiAgLmltYWdlIHtcbiAgICBiYWNrZ3JvdW5kLXNpemU6IGNvbnRhaW47XG4gIH1cbn1cbnNwYW4uc3ltLnBlcnNvbiB7XG4gIGEge1xuICAgIC5pbWFnZSB7XG4gICAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICAgICAgbWluLWhlaWdodDogMjAwcHg7XG4gICAgfVxuICB9XG59XG4uc3ltcG9zZS1zZXNzaW9uLWl0ZW1zIHtcbiAgbWFyZ2luLWJvdHRvbTogNDBweDtcbn1cblxuLndpZGdldCAuc3ltLWxpc3Qge1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBzcGFuLnN5bSB7XG4gICAgbWFyZ2luLWJvdHRvbTogMjBweDtcbiAgfVxufVxuXG4uc3ltLWxpc3Quc2hvcnRjb2RlIHtcbiAgc3Bhbi5zeW0ge1xuICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XG4gIH1cbn1cbiJdfQ== */
